#include "GLFW/GLFWindow.h"
#include "settings.h"

#include <stdio.h>
#include <imgui.h>

//Include files for IMGUI GLFW and OpenGL implementation
#include <imgui_impl_opengl3.h>
#include <imgui_impl_glfw.h>

GLFWindow mainWindow = GLFWindow();

struct {
    Themes currentTheme = DARK_MODE; // Dark Mode by default
} windowSettings;

int main() {
    mainWindow.windowInit();

    IMGUI_CHECKVERSION();
    ImGui::CreateContext();
    ImGuiIO& io = ImGui::GetIO(); (void) io;
    io.ConfigFlags |= ImGuiConfigFlags_NavEnableKeyboard; //Enable Keyboard Control

    // Handle window theme
    switch(windowSettings.currentTheme) {
        case LIGHT_MODE:
            ImGui::StyleColorsLight();
            break;
        case DARK_MODE:
            ImGui::StyleColorsDark();
            break;
    }

    //Setup backend renderer
    ImGui_ImplGlfw_InitForOpenGL(mainWindow.window, true);
    if(mainWindow.glsl_version == "") {
        fprintf(stderr, "[ERROR]: No GLSL Version found!!");
    }
    ImGui_ImplOpenGL3_Init("#version 450 core");

    bool show_demo_window = true;
    bool show_another_window = true;
    ImVec4 clear_color = ImVec4(0.45f, 0.55f, 0.60f, 1.00f);

    while(!glfwWindowShouldClose(mainWindow.window)) {
        glfwPollEvents();

        ImGui_ImplOpenGL3_NewFrame();
        ImGui_ImplGlfw_NewFrame();
        ImGui::NewFrame();
        ImGui::ShowDemoWindow(&show_demo_window);

    }


};